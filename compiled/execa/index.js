(()=>{var e={641:(e,t,n)=>{"use strict";const r=n(81);const o=n(450);const s=n(217);function spawn(e,t,n){const i=o(e,t,n);const a=r.spawn(i.command,i.args,i.options);s.hookChildProcess(a,i);return a}function spawnSync(e,t,n){const i=o(e,t,n);const a=r.spawnSync(i.command,i.args,i.options);a.error=a.error||s.verifyENOENTSync(a.status,i);return a}e.exports=spawn;e.exports.spawn=spawn;e.exports.sync=spawnSync;e.exports._parse=o;e.exports._enoent=s},217:e=>{"use strict";const t=process.platform==="win32";function notFoundError(e,t){return Object.assign(new Error(`${t} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${t} ${e.command}`,path:e.command,spawnargs:e.args})}function hookChildProcess(e,n){if(!t){return}const r=e.emit;e.emit=function(t,o){if(t==="exit"){const t=verifyENOENT(o,n,"spawn");if(t){return r.call(e,"error",t)}}return r.apply(e,arguments)}}function verifyENOENT(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,"spawn")}return null}function verifyENOENTSync(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,"spawnSync")}return null}e.exports={hookChildProcess:hookChildProcess,verifyENOENT:verifyENOENT,verifyENOENTSync:verifyENOENTSync,notFoundError:notFoundError}},450:(e,t,n)=>{"use strict";const r=n(17);const o=n(8);const s=n(201);const i=n(590);const a=process.platform==="win32";const c=/\.(?:com|exe)$/i;const u=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function detectShebang(e){e.file=o(e);const t=e.file&&i(e.file);if(t){e.args.unshift(e.file);e.command=t;return o(e)}return e.file}function parseNonShell(e){if(!a){return e}const t=detectShebang(e);const n=!c.test(t);if(e.options.forceShell||n){const n=u.test(t);e.command=r.normalize(e.command);e.command=s.command(e.command);e.args=e.args.map((e=>s.argument(e,n)));const o=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${o}"`];e.command=process.env.comspec||"cmd.exe";e.options.windowsVerbatimArguments=true}return e}function parse(e,t,n){if(t&&!Array.isArray(t)){n=t;t=null}t=t?t.slice(0):[];n=Object.assign({},n);const r={command:e,args:t,options:n,file:undefined,original:{command:e,args:t}};return n.shell?r:parseNonShell(r)}e.exports=parse},201:e=>{"use strict";const t=/([()\][%!^"`<>&|;, *?])/g;function escapeCommand(e){e=e.replace(t,"^$1");return e}function escapeArgument(e,n){e=`${e}`;e=e.replace(/(\\*)"/g,'$1$1\\"');e=e.replace(/(\\*)$/,"$1$1");e=`"${e}"`;e=e.replace(t,"^$1");if(n){e=e.replace(t,"^$1")}return e}e.exports.command=escapeCommand;e.exports.argument=escapeArgument},590:(e,t,n)=>{"use strict";const r=n(147);const o=n(344);function readShebang(e){const t=150;const n=Buffer.alloc(t);let s;try{s=r.openSync(e,"r");r.readSync(s,n,0,t,0);r.closeSync(s)}catch(e){}return o(n.toString())}e.exports=readShebang},8:(e,t,n)=>{"use strict";const r=n(17);const o=n(594);const s=n(855);function resolveCommandAttempt(e,t){const n=e.options.env||process.env;const i=process.cwd();const a=e.options.cwd!=null;const c=a&&process.chdir!==undefined&&!process.chdir.disabled;if(c){try{process.chdir(e.options.cwd)}catch(e){}}let u;try{u=o.sync(e.command,{path:n[s({env:n})],pathExt:t?r.delimiter:undefined})}catch(e){}finally{if(c){process.chdir(i)}}if(u){u=r.resolve(a?e.options.cwd:"",u)}return u}function resolveCommand(e){return resolveCommandAttempt(e)||resolveCommandAttempt(e,true)}e.exports=resolveCommand},784:(e,t,n)=>{var r=n(147);var o;if(process.platform==="win32"||global.TESTING_WINDOWS){o=n(345)}else{o=n(45)}e.exports=isexe;isexe.sync=sync;function isexe(e,t,n){if(typeof t==="function"){n=t;t={}}if(!n){if(typeof Promise!=="function"){throw new TypeError("callback not provided")}return new Promise((function(n,r){isexe(e,t||{},(function(e,t){if(e){r(e)}else{n(t)}}))}))}o(e,t||{},(function(e,r){if(e){if(e.code==="EACCES"||t&&t.ignoreErrors){e=null;r=false}}n(e,r)}))}function sync(e,t){try{return o.sync(e,t||{})}catch(e){if(t&&t.ignoreErrors||e.code==="EACCES"){return false}else{throw e}}}},45:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function isexe(e,t,n){r.stat(e,(function(e,r){n(e,e?false:checkStat(r,t))}))}function sync(e,t){return checkStat(r.statSync(e),t)}function checkStat(e,t){return e.isFile()&&checkMode(e,t)}function checkMode(e,t){var n=e.mode;var r=e.uid;var o=e.gid;var s=t.uid!==undefined?t.uid:process.getuid&&process.getuid();var i=t.gid!==undefined?t.gid:process.getgid&&process.getgid();var a=parseInt("100",8);var c=parseInt("010",8);var u=parseInt("001",8);var d=a|c;var f=n&u||n&c&&o===i||n&a&&r===s||n&d&&s===0;return f}},345:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function checkPathExt(e,t){var n=t.pathExt!==undefined?t.pathExt:process.env.PATHEXT;if(!n){return true}n=n.split(";");if(n.indexOf("")!==-1){return true}for(var r=0;r<n.length;r++){var o=n[r].toLowerCase();if(o&&e.substr(-o.length).toLowerCase()===o){return true}}return false}function checkStat(e,t,n){if(!e.isSymbolicLink()&&!e.isFile()){return false}return checkPathExt(t,n)}function isexe(e,t,n){r.stat(e,(function(r,o){n(r,r?false:checkStat(o,e,t))}))}function sync(e,t){return checkStat(r.statSync(e),e,t)}},148:(e,t,n)=>{"use strict";const{PassThrough:r}=n(781);e.exports=function(){var e=[];var t=new r({objectMode:true});t.setMaxListeners(0);t.add=add;t.isEmpty=isEmpty;t.on("unpipe",remove);Array.prototype.slice.call(arguments).forEach(add);return t;function add(n){if(Array.isArray(n)){n.forEach(add);return this}e.push(n);n.once("end",remove.bind(null,n));n.once("error",t.emit.bind(t,"error"));n.pipe(t,{end:false});return this}function isEmpty(){return e.length==0}function remove(n){e=e.filter((function(e){return e!==n}));if(!e.length&&t.readable){t.end()}}}},855:e=>{"use strict";const pathKey=(e={})=>{const t=e.env||process.env;const n=e.platform||process.platform;if(n!=="win32"){return"PATH"}return Object.keys(t).reverse().find((e=>e.toUpperCase()==="PATH"))||"Path"};e.exports=pathKey;e.exports["default"]=pathKey},344:(e,t,n)=>{"use strict";const r=n(156);e.exports=(e="")=>{const t=e.match(r);if(!t){return null}const[n,o]=t[0].replace(/#! ?/,"").split(" ");const s=n.split("/").pop();if(s==="env"){return o}return o?`${s} ${o}`:s}},156:e=>{"use strict";e.exports=/^#!(.*)/},594:(e,t,n)=>{const r=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys";const o=n(17);const s=r?";":":";const i=n(784);const getNotFoundError=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"});const getPathInfo=(e,t)=>{const n=t.colon||s;const o=e.match(/\//)||r&&e.match(/\\/)?[""]:[...r?[process.cwd()]:[],...(t.path||process.env.PATH||"").split(n)];const i=r?t.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"";const a=r?i.split(n):[""];if(r){if(e.indexOf(".")!==-1&&a[0]!=="")a.unshift("")}return{pathEnv:o,pathExt:a,pathExtExe:i}};const which=(e,t,n)=>{if(typeof t==="function"){n=t;t={}}if(!t)t={};const{pathEnv:r,pathExt:s,pathExtExe:a}=getPathInfo(e,t);const c=[];const step=n=>new Promise(((s,i)=>{if(n===r.length)return t.all&&c.length?s(c):i(getNotFoundError(e));const a=r[n];const u=/^".*"$/.test(a)?a.slice(1,-1):a;const d=o.join(u,e);const f=!u&&/^\.[\\\/]/.test(e)?e.slice(0,2)+d:d;s(subStep(f,n,0))}));const subStep=(e,n,r)=>new Promise(((o,u)=>{if(r===s.length)return o(step(n+1));const d=s[r];i(e+d,{pathExt:a},((s,i)=>{if(!s&&i){if(t.all)c.push(e+d);else return o(e+d)}return o(subStep(e,n,r+1))}))}));return n?step(0).then((e=>n(null,e)),n):step(0)};const whichSync=(e,t)=>{t=t||{};const{pathEnv:n,pathExt:r,pathExtExe:s}=getPathInfo(e,t);const a=[];for(let c=0;c<n.length;c++){const u=n[c];const d=/^".*"$/.test(u)?u.slice(1,-1):u;const f=o.join(d,e);const l=!d&&/^\.[\\\/]/.test(e)?e.slice(0,2)+f:f;for(let e=0;e<r.length;e++){const n=l+r[e];try{const e=i.sync(n,{pathExt:s});if(e){if(t.all)a.push(n);else return n}}catch(e){}}}if(t.all&&a.length)return a;if(t.nothrow)return null;throw getNotFoundError(e)};e.exports=which;which.sync=whichSync},81:e=>{"use strict";e.exports=require("child_process")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")},781:e=>{"use strict";e.exports=require("stream")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var n={};(()=>{"use strict";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{$:()=>z,execa:()=>execa,execaCommand:()=>execaCommand,execaCommandSync:()=>execaCommandSync,execaNode:()=>execaNode,execaSync:()=>execaSync});const e=require("node:buffer");const t=require("node:path");const r=require("node:child_process");const o=require("node:process");var s=__nccwpck_require__(641);function stripFinalNewline(e){const t=typeof e==="string"?"\n":"\n".charCodeAt();const n=typeof e==="string"?"\r":"\r".charCodeAt();if(e[e.length-1]===t){e=e.slice(0,-1)}if(e[e.length-1]===n){e=e.slice(0,-1)}return e}const i=require("node:url");function pathKey(e={}){const{env:t=process.env,platform:n=process.platform}=e;if(n!=="win32"){return"PATH"}return Object.keys(t).reverse().find((e=>e.toUpperCase()==="PATH"))||"Path"}const npmRunPath=({cwd:e=o.cwd(),path:n=o.env[pathKey()],preferLocal:r=true,execPath:s=o.execPath,addExecPath:a=true}={})=>{const c=e instanceof URL?(0,i.fileURLToPath)(e):e;const u=t.resolve(c);const d=[];if(r){applyPreferLocal(d,u)}if(a){applyExecPath(d,s,u)}return[...d,n].join(t.delimiter)};const applyPreferLocal=(e,n)=>{let r;while(r!==n){e.push(t.join(n,"node_modules/.bin"));r=n;n=t.resolve(n,"..")}};const applyExecPath=(e,n,r)=>{const o=n instanceof URL?(0,i.fileURLToPath)(n):n;e.push(t.resolve(r,o,".."))};const npmRunPathEnv=({env:e=o.env,...t}={})=>{e={...e};const n=pathKey({env:e});t.path=e[n];e[n]=npmRunPath(t);return e};const copyProperty=(e,t,n,r)=>{if(n==="length"||n==="prototype"){return}if(n==="arguments"||n==="caller"){return}const o=Object.getOwnPropertyDescriptor(e,n);const s=Object.getOwnPropertyDescriptor(t,n);if(!canCopyProperty(o,s)&&r){return}Object.defineProperty(e,n,s)};const canCopyProperty=function(e,t){return e===undefined||e.configurable||e.writable===t.writable&&e.enumerable===t.enumerable&&e.configurable===t.configurable&&(e.writable||e.value===t.value)};const changePrototype=(e,t)=>{const n=Object.getPrototypeOf(t);if(n===Object.getPrototypeOf(e)){return}Object.setPrototypeOf(e,n)};const wrappedToString=(e,t)=>`/* Wrapped ${e}*/\n${t}`;const a=Object.getOwnPropertyDescriptor(Function.prototype,"toString");const c=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name");const changeToString=(e,t,n)=>{const r=n===""?"":`with ${n.trim()}() `;const o=wrappedToString.bind(null,r,t.toString());Object.defineProperty(o,"name",c);Object.defineProperty(e,"toString",{...a,value:o})};function mimicFunction(e,t,{ignoreNonConfigurable:n=false}={}){const{name:r}=e;for(const r of Reflect.ownKeys(t)){copyProperty(e,t,r,n)}changePrototype(e,t);changeToString(e,t,r);return e}const u=new WeakMap;const onetime=(e,t={})=>{if(typeof e!=="function"){throw new TypeError("Expected a function")}let n;let r=0;const o=e.displayName||e.name||"<anonymous>";const onetime=function(...s){u.set(onetime,++r);if(r===1){n=e.apply(this,s);e=null}else if(t.throw===true){throw new Error(`Function \`${o}\` can only be called once`)}return n};mimicFunction(onetime,e);u.set(onetime,r);return onetime};onetime.callCount=e=>{if(!u.has(e)){throw new Error(`The given function \`${e.name}\` is not wrapped by the \`onetime\` package`)}return u.get(e)};const d=onetime;const f=require("node:os");const getRealtimeSignals=()=>{const e=p-l+1;return Array.from({length:e},getRealtimeSignal)};const getRealtimeSignal=(e,t)=>({name:`SIGRT${t+1}`,number:l+t,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"});const l=34;const p=64;const m=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:true},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:true},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:true},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}];const getSignals=()=>{const e=getRealtimeSignals();const t=[...m,...e].map(normalizeSignal);return t};const normalizeSignal=({name:e,number:t,description:n,action:r,forced:o=false,standard:s})=>{const{signals:{[e]:i}}=f.constants;const a=i!==undefined;const c=a?i:t;return{name:e,number:c,description:n,supported:a,action:r,forced:o,standard:s}};const getSignalsByName=()=>{const e=getSignals();return Object.fromEntries(e.map(getSignalByName))};const getSignalByName=({name:e,number:t,description:n,supported:r,action:o,forced:s,standard:i})=>[e,{name:e,number:t,description:n,supported:r,action:o,forced:s,standard:i}];const h=getSignalsByName();const getSignalsByNumber=()=>{const e=getSignals();const t=p+1;const n=Array.from({length:t},((t,n)=>getSignalByNumber(n,e)));return Object.assign({},...n)};const getSignalByNumber=(e,t)=>{const n=findSignalByNumber(e,t);if(n===undefined){return{}}const{name:r,description:o,supported:s,action:i,forced:a,standard:c}=n;return{[e]:{name:r,number:e,description:o,supported:s,action:i,forced:a,standard:c}}};const findSignalByNumber=(e,t)=>{const n=t.find((({name:t})=>f.constants.signals[t]===e));if(n!==undefined){return n}return t.find((t=>t.number===e))};const g=getSignalsByNumber();const getErrorPrefix=({timedOut:e,timeout:t,errorCode:n,signal:r,signalDescription:o,exitCode:s,isCanceled:i})=>{if(e){return`timed out after ${t} milliseconds`}if(i){return"was canceled"}if(n!==undefined){return`failed with ${n}`}if(r!==undefined){return`was killed with ${r} (${o})`}if(s!==undefined){return`failed with exit code ${s}`}return"failed"};const makeError=({stdout:e,stderr:t,all:n,error:r,signal:s,exitCode:i,command:a,escapedCommand:c,timedOut:u,isCanceled:d,killed:f,parsed:{options:{timeout:l,cwd:p=o.cwd()}}})=>{i=i===null?undefined:i;s=s===null?undefined:s;const m=s===undefined?undefined:h[s].description;const g=r&&r.code;const y=getErrorPrefix({timedOut:u,timeout:l,errorCode:g,signal:s,signalDescription:m,exitCode:i,isCanceled:d});const b=`Command ${y}: ${a}`;const x=Object.prototype.toString.call(r)==="[object Error]";const S=x?`${b}\n${r.message}`:b;const w=[S,t,e].filter(Boolean).join("\n");if(x){r.originalMessage=r.message;r.message=w}else{r=new Error(w)}r.shortMessage=S;r.command=a;r.escapedCommand=c;r.exitCode=i;r.signal=s;r.signalDescription=m;r.stdout=e;r.stderr=t;r.cwd=p;if(n!==undefined){r.all=n}if("bufferedData"in r){delete r.bufferedData}r.failed=true;r.timedOut=Boolean(u);r.isCanceled=d;r.killed=f&&!u;return r};const y=["stdin","stdout","stderr"];const hasAlias=e=>y.some((t=>e[t]!==undefined));const normalizeStdio=e=>{if(!e){return}const{stdio:t}=e;if(t===undefined){return y.map((t=>e[t]))}if(hasAlias(e)){throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${y.map((e=>`\`${e}\``)).join(", ")}`)}if(typeof t==="string"){return t}if(!Array.isArray(t)){throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof t}\``)}const n=Math.max(t.length,y.length);return Array.from({length:n},((e,n)=>t[n]))};const normalizeStdioNode=e=>{const t=normalizeStdio(e);if(t==="ipc"){return"ipc"}if(t===undefined||typeof t==="string"){return[t,t,t,"ipc"]}if(t.includes("ipc")){return t}return[...t,"ipc"]};const b=[];b.push("SIGHUP","SIGINT","SIGTERM");if(process.platform!=="win32"){b.push("SIGALRM","SIGABRT","SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT")}if(process.platform==="linux"){b.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT")}const processOk=e=>!!e&&typeof e==="object"&&typeof e.removeListener==="function"&&typeof e.emit==="function"&&typeof e.reallyExit==="function"&&typeof e.listeners==="function"&&typeof e.kill==="function"&&typeof e.pid==="number"&&typeof e.on==="function";const x=Symbol.for("signal-exit emitter");const S=globalThis;const w=Object.defineProperty.bind(Object);class Emitter{emitted={afterExit:false,exit:false};listeners={afterExit:[],exit:[]};count=0;id=Math.random();constructor(){if(S[x]){return S[x]}w(S,x,{value:this,writable:false,enumerable:false,configurable:false})}on(e,t){this.listeners[e].push(t)}removeListener(e,t){const n=this.listeners[e];const r=n.indexOf(t);if(r===-1){return}if(r===0&&n.length===1){n.length=0}else{n.splice(r,1)}}emit(e,t,n){if(this.emitted[e]){return false}this.emitted[e]=true;let r=false;for(const o of this.listeners[e]){r=o(t,n)===true||r}if(e==="exit"){r=this.emit("afterExit",t,n)||r}return r}}class SignalExitBase{}const signalExitWrap=e=>({onExit(t,n){return e.onExit(t,n)},load(){return e.load()},unload(){return e.unload()}});class SignalExitFallback extends SignalExitBase{onExit(){return()=>{}}load(){}unload(){}}class SignalExit extends SignalExitBase{#e=E.platform==="win32"?"SIGINT":"SIGHUP";#t=new Emitter;#n;#r;#o;#s={};#i=false;constructor(e){super();this.#n=e;this.#s={};for(const t of b){this.#s[t]=()=>{const n=this.#n.listeners(t);let{count:r}=this.#t;const o=e;if(typeof o.__signal_exit_emitter__==="object"&&typeof o.__signal_exit_emitter__.count==="number"){r+=o.__signal_exit_emitter__.count}if(n.length===r){this.unload();const n=this.#t.emit("exit",null,t);const r=t==="SIGHUP"?this.#e:t;if(!n)e.kill(e.pid,r)}}}this.#o=e.reallyExit;this.#r=e.emit}onExit(e,t){if(!processOk(this.#n)){return()=>{}}if(this.#i===false){this.load()}const n=t?.alwaysLast?"afterExit":"exit";this.#t.on(n,e);return()=>{this.#t.removeListener(n,e);if(this.#t.listeners["exit"].length===0&&this.#t.listeners["afterExit"].length===0){this.unload()}}}load(){if(this.#i){return}this.#i=true;this.#t.count+=1;for(const e of b){try{const t=this.#s[e];if(t)this.#n.on(e,t)}catch(e){}}this.#n.emit=(e,...t)=>this.#a(e,...t);this.#n.reallyExit=e=>this.#c(e)}unload(){if(!this.#i){return}this.#i=false;b.forEach((e=>{const t=this.#s[e];if(!t){throw new Error("Listener not defined for signal: "+e)}try{this.#n.removeListener(e,t)}catch(e){}}));this.#n.emit=this.#r;this.#n.reallyExit=this.#o;this.#t.count-=1}#c(e){if(!processOk(this.#n)){return 0}this.#n.exitCode=e||0;this.#t.emit("exit",this.#n.exitCode,null);return this.#o.call(this.#n,this.#n.exitCode)}#a(e,...t){const n=this.#r;if(e==="exit"&&processOk(this.#n)){if(typeof t[0]==="number"){this.#n.exitCode=t[0]}const r=n.call(this.#n,e,...t);this.#t.emit("exit",this.#n.exitCode,null);return r}else{return n.call(this.#n,e,...t)}}}const E=globalThis.process;const{onExit:C,load:v,unload:T}=signalExitWrap(processOk(E)?new SignalExit(E):new SignalExitFallback);const _=1e3*5;const spawnedKill=(e,t="SIGTERM",n={})=>{const r=e(t);setKillTimeout(e,t,n,r);return r};const setKillTimeout=(e,t,n,r)=>{if(!shouldForceKill(t,n,r)){return}const o=getForceKillAfterTimeout(n);const s=setTimeout((()=>{e("SIGKILL")}),o);if(s.unref){s.unref()}};const shouldForceKill=(e,{forceKillAfterTimeout:t},n)=>isSigterm(e)&&t!==false&&n;const isSigterm=e=>e===f.constants.signals.SIGTERM||typeof e==="string"&&e.toUpperCase()==="SIGTERM";const getForceKillAfterTimeout=({forceKillAfterTimeout:e=true})=>{if(e===true){return _}if(!Number.isFinite(e)||e<0){throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`)}return e};const spawnedCancel=(e,t)=>{const n=e.kill();if(n){t.isCanceled=true}};const timeoutKill=(e,t,n)=>{e.kill(t);n(Object.assign(new Error("Timed out"),{timedOut:true,signal:t}))};const setupTimeout=(e,{timeout:t,killSignal:n="SIGTERM"},r)=>{if(t===0||t===undefined){return r}let o;const s=new Promise(((r,s)=>{o=setTimeout((()=>{timeoutKill(e,n,s)}),t)}));const i=r.finally((()=>{clearTimeout(o)}));return Promise.race([s,i])};const validateTimeout=({timeout:e})=>{if(e!==undefined&&(!Number.isFinite(e)||e<0)){throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`)}};const setExitHandler=async(e,{cleanup:t,detached:n},r)=>{if(!t||n){return r}const o=C((()=>{e.kill()}));return r.finally((()=>{o()}))};const I=require("node:fs");function isStream(e){return e!==null&&typeof e==="object"&&typeof e.pipe==="function"}function isWritableStream(e){return isStream(e)&&e.writable!==false&&typeof e._write==="function"&&typeof e._writableState==="object"}function isReadableStream(e){return isStream(e)&&e.readable!==false&&typeof e._read==="function"&&typeof e._readableState==="object"}function isDuplexStream(e){return isWritableStream(e)&&isReadableStream(e)}function isTransformStream(e){return isDuplexStream(e)&&typeof e._transform==="function"}const isExecaChildProcess=e=>e instanceof r.ChildProcess&&typeof e.then==="function";const pipeToTarget=(e,t,n)=>{if(typeof n==="string"){e[t].pipe((0,I.createWriteStream)(n));return e}if(isWritableStream(n)){e[t].pipe(n);return e}if(!isExecaChildProcess(n)){throw new TypeError("The second argument must be a string, a stream or an Execa child process.")}if(!isWritableStream(n.stdin)){throw new TypeError("The target child process's stdin must be available.")}e[t].pipe(n.stdin);return n};const addPipeMethods=e=>{if(e.stdout!==null){e.pipeStdout=pipeToTarget.bind(undefined,e,"stdout")}if(e.stderr!==null){e.pipeStderr=pipeToTarget.bind(undefined,e,"stderr")}if(e.all!==undefined){e.pipeAll=pipeToTarget.bind(undefined,e,"all")}};const k=require("node:timers/promises");const contents_getStreamContents=async(e,{init:t,convertChunk:n,getSize:r,truncateChunk:o,addChunk:s,getFinalChunk:i,finalize:a},{maxBuffer:c=Number.POSITIVE_INFINITY}={})=>{if(!isAsyncIterable(e)){throw new Error("The first argument must be a Readable, a ReadableStream, or an async iterable.")}const u=t();u.length=0;try{for await(const t of e){const e=getChunkType(t);const i=n[e](t,u);appendChunk({convertedChunk:i,state:u,getSize:r,truncateChunk:o,addChunk:s,maxBuffer:c})}appendFinalChunk({state:u,convertChunk:n,getSize:r,truncateChunk:o,addChunk:s,getFinalChunk:i,maxBuffer:c});return a(u)}catch(e){e.bufferedData=a(u);throw e}};const appendFinalChunk=({state:e,getSize:t,truncateChunk:n,addChunk:r,getFinalChunk:o,maxBuffer:s})=>{const i=o(e);if(i!==undefined){appendChunk({convertedChunk:i,state:e,getSize:t,truncateChunk:n,addChunk:r,maxBuffer:s})}};const appendChunk=({convertedChunk:e,state:t,getSize:n,truncateChunk:r,addChunk:o,maxBuffer:s})=>{const i=n(e);const a=t.length+i;if(a<=s){addNewChunk(e,t,o,a);return}const c=r(e,s-t.length);if(c!==undefined){addNewChunk(c,t,o,s)}throw new MaxBufferError};const addNewChunk=(e,t,n,r)=>{t.contents=n(e,t,r);t.length=r};const isAsyncIterable=e=>typeof e==="object"&&e!==null&&typeof e[Symbol.asyncIterator]==="function";const getChunkType=e=>{const t=typeof e;if(t==="string"){return"string"}if(t!=="object"||e===null){return"others"}if(globalThis.Buffer?.isBuffer(e)){return"buffer"}const n=A.call(e);if(n==="[object ArrayBuffer]"){return"arrayBuffer"}if(n==="[object DataView]"){return"dataView"}if(Number.isInteger(e.byteLength)&&Number.isInteger(e.byteOffset)&&A.call(e.buffer)==="[object ArrayBuffer]"){return"typedArray"}return"others"};const{toString:A}=Object.prototype;class MaxBufferError extends Error{name="MaxBufferError";constructor(){super("maxBuffer exceeded")}}const identity=e=>e;const noop=()=>undefined;const getContentsProp=({contents:e})=>e;const throwObjectStream=e=>{throw new Error(`Streams in object mode are not supported: ${String(e)}`)};const getLengthProp=e=>e.length;async function getStreamAsArray(e,t){return getStreamContents(e,P,t)}const initArray=()=>({contents:[]});const increment=()=>1;const addArrayChunk=(e,{contents:t})=>{t.push(e);return t};const P={init:initArray,convertChunk:{string:identity,buffer:identity,arrayBuffer:identity,dataView:identity,typedArray:identity,others:identity},getSize:increment,truncateChunk:noop,addChunk:addArrayChunk,getFinalChunk:noop,finalize:getContentsProp};async function getStreamAsArrayBuffer(e,t){return contents_getStreamContents(e,B,t)}const initArrayBuffer=()=>({contents:new ArrayBuffer(0)});const useTextEncoder=e=>O.encode(e);const O=new TextEncoder;const useUint8Array=e=>new Uint8Array(e);const useUint8ArrayWithOffset=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength);const truncateArrayBufferChunk=(e,t)=>e.slice(0,t);const addArrayBufferChunk=(e,{contents:t,length:n},r)=>{const o=hasArrayBufferResize()?resizeArrayBuffer(t,r):resizeArrayBufferSlow(t,r);new Uint8Array(o).set(e,n);return o};const resizeArrayBufferSlow=(e,t)=>{if(t<=e.byteLength){return e}const n=new ArrayBuffer(getNewContentsLength(t));new Uint8Array(n).set(new Uint8Array(e),0);return n};const resizeArrayBuffer=(e,t)=>{if(t<=e.maxByteLength){e.resize(t);return e}const n=new ArrayBuffer(t,{maxByteLength:getNewContentsLength(t)});new Uint8Array(n).set(new Uint8Array(e),0);return n};const getNewContentsLength=e=>G**Math.ceil(Math.log(e)/Math.log(G));const G=2;const finalizeArrayBuffer=({contents:e,length:t})=>hasArrayBufferResize()?e:e.slice(0,t);const hasArrayBufferResize=()=>"resize"in ArrayBuffer.prototype;const B={init:initArrayBuffer,convertChunk:{string:useTextEncoder,buffer:useUint8Array,arrayBuffer:useUint8Array,dataView:useUint8ArrayWithOffset,typedArray:useUint8ArrayWithOffset,others:throwObjectStream},getSize:getLengthProp,truncateChunk:truncateArrayBufferChunk,addChunk:addArrayBufferChunk,getFinalChunk:noop,finalize:finalizeArrayBuffer};async function getStreamAsBuffer(e,t){if(!("Buffer"in globalThis)){throw new Error("getStreamAsBuffer() is only supported in Node.js")}try{return arrayBufferToNodeBuffer(await getStreamAsArrayBuffer(e,t))}catch(e){if(e.bufferedData!==undefined){e.bufferedData=arrayBufferToNodeBuffer(e.bufferedData)}throw e}}const arrayBufferToNodeBuffer=e=>globalThis.Buffer.from(e);async function getStreamAsString(e,t){return contents_getStreamContents(e,j,t)}const initString=()=>({contents:"",textDecoder:new TextDecoder});const useTextDecoder=(e,{textDecoder:t})=>t.decode(e,{stream:true});const addStringChunk=(e,{contents:t})=>t+e;const truncateStringChunk=(e,t)=>e.slice(0,t);const getFinalStringChunk=({textDecoder:e})=>{const t=e.decode();return t===""?undefined:t};const j={init:initString,convertChunk:{string:identity,buffer:useTextDecoder,arrayBuffer:useTextDecoder,dataView:useTextDecoder,typedArray:useTextDecoder,others:throwObjectStream},getSize:getLengthProp,truncateChunk:truncateStringChunk,addChunk:addStringChunk,getFinalChunk:getFinalStringChunk,finalize:getContentsProp};var N=__nccwpck_require__(148);const validateInputOptions=e=>{if(e!==undefined){throw new TypeError("The `input` and `inputFile` options cannot be both set.")}};const getInputSync=({input:e,inputFile:t})=>{if(typeof t!=="string"){return e}validateInputOptions(e);return(0,I.readFileSync)(t)};const handleInputSync=e=>{const t=getInputSync(e);if(isStream(t)){throw new TypeError("The `input` option cannot be a stream in sync mode")}return t};const getInput=({input:e,inputFile:t})=>{if(typeof t!=="string"){return e}validateInputOptions(e);return(0,I.createReadStream)(t)};const handleInput=(e,t)=>{const n=getInput(t);if(n===undefined){return}if(isStream(n)){n.pipe(e.stdin)}else{e.stdin.end(n)}};const makeAllStream=(e,{all:t})=>{if(!t||!e.stdout&&!e.stderr){return}const n=N();if(e.stdout){n.add(e.stdout)}if(e.stderr){n.add(e.stderr)}return n};const getBufferedData=async(e,t)=>{if(!e||t===undefined){return}await(0,k.setTimeout)(0);e.destroy();try{return await t}catch(e){return e.bufferedData}};const getStreamPromise=(e,{encoding:t,buffer:n,maxBuffer:r})=>{if(!e||!n){return}if(t==="utf8"||t==="utf-8"){return getStreamAsString(e,{maxBuffer:r})}if(t===null||t==="buffer"){return getStreamAsBuffer(e,{maxBuffer:r})}return applyEncoding(e,r,t)};const applyEncoding=async(e,t,n)=>{const r=await getStreamAsBuffer(e,{maxBuffer:t});return r.toString(n)};const getSpawnedResult=async({stdout:e,stderr:t,all:n},{encoding:r,buffer:o,maxBuffer:s},i)=>{const a=getStreamPromise(e,{encoding:r,buffer:o,maxBuffer:s});const c=getStreamPromise(t,{encoding:r,buffer:o,maxBuffer:s});const u=getStreamPromise(n,{encoding:r,buffer:o,maxBuffer:s*2});try{return await Promise.all([i,a,c,u])}catch(r){return Promise.all([{error:r,signal:r.signal,timedOut:r.timedOut},getBufferedData(e,a),getBufferedData(t,c),getBufferedData(n,u)])}};const L=(async()=>{})().constructor.prototype;const R=["then","catch","finally"].map((e=>[e,Reflect.getOwnPropertyDescriptor(L,e)]));const mergePromise=(e,t)=>{for(const[n,r]of R){const o=typeof t==="function"?(...e)=>Reflect.apply(r.value,t(),e):r.value.bind(t);Reflect.defineProperty(e,n,{...r,value:o})}};const getSpawnedPromise=e=>new Promise(((t,n)=>{e.on("exit",((e,n)=>{t({exitCode:e,signal:n})}));e.on("error",(e=>{n(e)}));if(e.stdin){e.stdin.on("error",(e=>{n(e)}))}}));const normalizeArgs=(e,t=[])=>{if(!Array.isArray(t)){return[e]}return[e,...t]};const F=/^[\w.-]+$/;const escapeArg=e=>{if(typeof e!=="string"||F.test(e)){return e}return`"${e.replaceAll('"','\\"')}"`};const joinCommand=(e,t)=>normalizeArgs(e,t).join(" ");const getEscapedCommand=(e,t)=>normalizeArgs(e,t).map((e=>escapeArg(e))).join(" ");const U=/ +/g;const parseCommand=e=>{const t=[];for(const n of e.trim().split(U)){const e=t.at(-1);if(e&&e.endsWith("\\")){t[t.length-1]=`${e.slice(0,-1)} ${n}`}else{t.push(n)}}return t};const parseExpression=t=>{const n=typeof t;if(n==="string"){return t}if(n==="number"){return String(t)}if(n==="object"&&t!==null&&!(t instanceof r.ChildProcess)&&"stdout"in t){const n=typeof t.stdout;if(n==="string"){return t.stdout}if(e.Buffer.isBuffer(t.stdout)){return t.stdout.toString()}throw new TypeError(`Unexpected "${n}" stdout in template expression`)}throw new TypeError(`Unexpected "${n}" in template expression`)};const concatTokens=(e,t,n)=>n||e.length===0||t.length===0?[...e,...t]:[...e.slice(0,-1),`${e.at(-1)}${t[0]}`,...t.slice(1)];const parseTemplate=({templates:e,expressions:t,tokens:n,index:r,template:o})=>{const s=o??e.raw[r];const i=s.split(U).filter(Boolean);const a=concatTokens(n,i,s.startsWith(" "));if(r===t.length){return a}const c=t[r];const u=Array.isArray(c)?c.map((e=>parseExpression(e))):[parseExpression(c)];return concatTokens(a,u,s.endsWith(" "))};const parseTemplates=(e,t)=>{let n=[];for(const[r,o]of e.entries()){n=parseTemplate({templates:e,expressions:t,tokens:n,index:r,template:o})}return n};const D=require("node:util");const M=(0,D.debuglog)("execa").enabled;const padField=(e,t)=>String(e).padStart(t,"0");const getTimestamp=()=>{const e=new Date;return`${padField(e.getHours(),2)}:${padField(e.getMinutes(),2)}:${padField(e.getSeconds(),2)}.${padField(e.getMilliseconds(),3)}`};const logCommand=(e,{verbose:t})=>{if(!t){return}o.stderr.write(`[${getTimestamp()}] ${e}\n`)};const q=1e3*1e3*100;const getEnv=({env:e,extendEnv:t,preferLocal:n,localDir:r,execPath:s})=>{const i=t?{...o.env,...e}:e;if(n){return npmRunPathEnv({env:i,cwd:r,execPath:s})}return i};const handleArguments=(e,n,r={})=>{const i=s._parse(e,n,r);e=i.command;n=i.args;r=i.options;r={maxBuffer:q,buffer:true,stripFinalNewline:true,extendEnv:true,preferLocal:false,localDir:r.cwd||o.cwd(),execPath:o.execPath,encoding:"utf8",reject:true,cleanup:true,all:false,windowsHide:true,verbose:M,...r};r.env=getEnv(r);r.stdio=normalizeStdio(r);if(o.platform==="win32"&&t.basename(e,".exe")==="cmd"){n.unshift("/q")}return{file:e,args:n,options:r,parsed:i}};const handleOutput=(t,n,r)=>{if(typeof n!=="string"&&!e.Buffer.isBuffer(n)){return r===undefined?undefined:""}if(t.stripFinalNewline){return stripFinalNewline(n)}return n};function execa(e,t,n){const o=handleArguments(e,t,n);const s=joinCommand(e,t);const i=getEscapedCommand(e,t);logCommand(i,o.options);validateTimeout(o.options);let a;try{a=r.spawn(o.file,o.args,o.options)}catch(e){const t=new r.ChildProcess;const n=Promise.reject(makeError({error:e,stdout:"",stderr:"",all:"",command:s,escapedCommand:i,parsed:o,timedOut:false,isCanceled:false,killed:false}));mergePromise(t,n);return t}const c=getSpawnedPromise(a);const u=setupTimeout(a,o.options,c);const f=setExitHandler(a,o.options,u);const l={isCanceled:false};a.kill=spawnedKill.bind(null,a.kill.bind(a));a.cancel=spawnedCancel.bind(null,a,l);const handlePromise=async()=>{const[{error:e,exitCode:t,signal:n,timedOut:r},c,u,d]=await getSpawnedResult(a,o.options,f);const p=handleOutput(o.options,c);const m=handleOutput(o.options,u);const h=handleOutput(o.options,d);if(e||t!==0||n!==null){const c=makeError({error:e,exitCode:t,signal:n,stdout:p,stderr:m,all:h,command:s,escapedCommand:i,parsed:o,timedOut:r,isCanceled:l.isCanceled||(o.options.signal?o.options.signal.aborted:false),killed:a.killed});if(!o.options.reject){return c}throw c}return{command:s,escapedCommand:i,exitCode:0,stdout:p,stderr:m,all:h,failed:false,timedOut:false,isCanceled:false,killed:false}};const p=d(handlePromise);handleInput(a,o.options);a.all=makeAllStream(a,o.options);addPipeMethods(a);mergePromise(a,p);return a}function execaSync(e,t,n){const o=handleArguments(e,t,n);const s=joinCommand(e,t);const i=getEscapedCommand(e,t);logCommand(i,o.options);const a=handleInputSync(o.options);let c;try{c=r.spawnSync(o.file,o.args,{...o.options,input:a})}catch(e){throw makeError({error:e,stdout:"",stderr:"",all:"",command:s,escapedCommand:i,parsed:o,timedOut:false,isCanceled:false,killed:false})}const u=handleOutput(o.options,c.stdout,c.error);const d=handleOutput(o.options,c.stderr,c.error);if(c.error||c.status!==0||c.signal!==null){const e=makeError({stdout:u,stderr:d,error:c.error,signal:c.signal,exitCode:c.status,command:s,escapedCommand:i,parsed:o,timedOut:c.error&&c.error.code==="ETIMEDOUT",isCanceled:false,killed:c.signal!==null});if(!o.options.reject){return e}throw e}return{command:s,escapedCommand:i,exitCode:0,stdout:u,stderr:d,failed:false,timedOut:false,isCanceled:false,killed:false}}const normalizeScriptStdin=({input:e,inputFile:t,stdio:n})=>e===undefined&&t===undefined&&n===undefined?{stdin:"inherit"}:{};const normalizeScriptOptions=(e={})=>({preferLocal:true,...normalizeScriptStdin(e),...e});function create$(e){function $(t,...n){if(!Array.isArray(t)){return create$({...e,...t})}const[r,...o]=parseTemplates(t,n);return execa(r,o,normalizeScriptOptions(e))}$.sync=(t,...n)=>{if(!Array.isArray(t)){throw new TypeError("Please use $(options).sync`command` instead of $.sync(options)`command`.")}const[r,...o]=parseTemplates(t,n);return execaSync(r,o,normalizeScriptOptions(e))};return $}const z=create$();function execaCommand(e,t){const[n,...r]=parseCommand(e);return execa(n,r,t)}function execaCommandSync(e,t){const[n,...r]=parseCommand(e);return execaSync(n,r,t)}function execaNode(e,t,n={}){if(t&&!Array.isArray(t)&&typeof t==="object"){n=t;t=[]}const r=normalizeStdioNode(n);const s=o.execArgv.filter((e=>!e.startsWith("--inspect")));const{nodePath:i=o.execPath,nodeOptions:a=s}=n;return execa(i,[...a,e,...Array.isArray(t)?t:[]],{...n,stdin:undefined,stdout:undefined,stderr:undefined,stdio:r,shell:false})}})();module.exports=n})();